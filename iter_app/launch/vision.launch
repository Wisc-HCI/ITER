<launch>

  <arg name="marker_size" default="5.0" />
  <arg name="max_new_marker_error" default="0.05" />
  <arg name="max_track_error" default="0.05" />
  <arg name="output_frame" default="/map" />

  <arg name="flag_image_view_initial" default="false" />
  <arg name="flag_image_view_blocks" default="false" />
  <arg name="flag_image_view_ar_2d" default="true" />


  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen">
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="mjpeg" /> <!-- dell=yuyv -->
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap" />
  </node>

  <node if="$(arg flag_image_view_initial)" name="image_view_initial" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/usb_cam/image_raw" />
    <param name="autosize" value="true" />
  </node>

  <node name="block_vision" pkg="iter_app" type="block_vision.py" output="screen" />

  <node if="$(arg flag_image_view_blocks)" name="image_view_block_detect" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/block_vision/image" />
    <param name="autosize" value="true" />
    <param name="~image_transport" value="compressed" />
  </node>

  <node name="camera_transform_publisher" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 1 /map /usb_cam"/>

  <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
    <param name="marker_size"           type="double" value="$(arg marker_size)" />
    <param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
    <param name="max_track_error"       type="double" value="$(arg max_track_error)" />
    <param name="output_frame"          type="string" value="$(arg output_frame)" />

    <remap from="camera_image"  to="/usb_cam/image_raw" />
    <remap from="camera_info"   to="/usb_cam/camera_info" />
  </node>

  <node name="ar_2d_image_plot" pkg="iter_app" type="ar_2d_image.py">
    <remap from="/image/compressed" to="/block_vision/image/compressed" />
  </node>

  <node if="$(arg flag_image_view_ar_2d)" name="image_view_ar" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/ar_2d/image" />
    <param name="autosize" value="true" />
    <param name="~image_transport" value="compressed" />
  </node>

</launch>
